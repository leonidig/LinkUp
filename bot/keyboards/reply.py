from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton


def main_kb(exists_user: bool,
            exists_master: bool = False
            ):
    builder = ReplyKeyboardBuilder()

    if not exists_user:
        builder.button(text='–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è')
    if not exists_master and exists_user:
        builder.button(text='–°—Ç–≤–æ—Ä–∏—Ç–∏ –ü—Ä–æ—Ñ—ñ–ª—å –ú–∞–π—Å—Ç–µ—Ä–∞')
    if exists_master:
        builder.button(text='–î—ñ—ó –ó –ü–æ—Å–ª—É–≥–∞–º–∏')
    if exists_master or exists_user:
        builder.button(text='–ó–Ω–∞–π—Ç–∏ –º–∞–π—Å—Ç—Ä–∞')

    builder.adjust(1)
    return builder.as_markup()


def name_kb(name: str) -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=name)]],
        resize_keyboard=True,
        one_time_keyboard=True 
    )


def contact_keyboard() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì± –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏", request_contact=True)]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )


def actions_with_services_kb():
    builder = ReplyKeyboardBuilder()

    builder.button(text='–ú–æ—ó –ü–æ—Å–ª—É–≥–∏')
    builder.button(text='–°—Ç–≤–æ—Ä–∏—Ç–∏ –ü–æ—Å–ª—É–≥—É')
    builder.button(text='–í–∏–¥–∞–ª–∏—Ç–∏ –ü–æ—Å–ª—É–≥—É')
    builder.button(text='–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –î–æ –ú–µ–Ω—é')

    builder.adjust(1)

    return builder.as_markup()